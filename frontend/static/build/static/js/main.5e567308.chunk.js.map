{"version":3,"sources":["components/SignUp.js","components/LogIn.js","components/GroupList.js","components/GroupDetail.js","components/GroupForm.js","containers/App.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","SignUp","props","state","username","email","password1","password2","handleSubmit","bind","handleChange","e","preventDefault","post","process","this","then","res","console","log","localStorage","setItem","JSON","stringify","data","history","push","catch","error","setState","target","name","value","className","Form","onSubmit","Group","Label","Control","type","onChange","placeholder","required","Text","password","Button","Component","LogIn","window","location","reload","controlId","href","to","GroupList","groups","id","title","description","image","preview","is_public","handleDelete","group","delete","INDEX","indexOf","splice","get","result","map","CardDeck","key","style","width","Card","bg","text","Img","src","variant","alt","Body","Title","Link","onClick","GroupDetail","match","params","GroupForm","handleImage","files","file","formData","FormData","append","headers","as","rows","Check","label","Home","logOut","removeItem","Boolean","hostname","ReactDOM","render","Nav","defaultActiveKey","Item","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5e567308.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport {Form, Button} from 'react-bootstrap';\nimport '../containers/App.css';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nclass SignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post(`${BASE_URL}/rest-auth/registration/`, this.state)\n    .then(res => {\n        console.log('two', res)\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        this.props.history.push('/');\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n    // console.log('props', this.props)\n    return  (\n        <div className=\"d-flex justify-content-center create-profile-container mt-5\">\n            <Form className=\"profile-form\" onSubmit={this.handleSubmit}>\n                <h2 className=\"form-title d-flex justify-content-center\"><span>Sign Up</span></h2>\n                <Form.Group>\n                    <Form.Label className=\"Form-label\">Username:</Form.Label>\n                    <Form.Control  type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label className=\"Form-label\">Email:</Form.Label>\n                    <Form.Control  type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n                    <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label className=\"Form-label\">Password:</Form.Label>\n                    <Form.Control  type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleChange} placeholder='Enter password' required />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label className=\"Form-label\"> Confirm Password:</Form.Label>\n                    <Form.Control  type=\"password\" name=\"password2\" value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required />\n                </Form.Group>\n                <Button className=\"login-Btn\" type='submit'>Sign Up</Button>\n            </Form>\n      </div>\n    )\n  }\n}\n\nexport default SignUp;","import React, {Component} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport '../containers/App.css';\nimport axios from \"axios\";\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nclass LogIn extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    console.log('The link was clicked.');\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    axios.post(`${BASE_URL}/rest-auth/login/`, this.state)\n    .then(res => {\n        console.log('one', res)\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        // this.props.history.push('/');\n        window.location.reload(false);\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n\n\n    return  (\n            <div className=\"d-flex justify-content-center create-profile-container mt-5\">\n                <Form className=\"profile-form\" onSubmit={this.handleSubmit}>\n                    <h2 className=\"form-title d-flex justify-content-center\">Login</h2>\n                    <Form.Group >\n                        <Form.Label className=\"Form-label\">Username:</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\" >\n                        <Form.Label className=\"Form-label\">Email:</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label className=\"Form-label\">Password:</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required />\n                        <Form.Text className=\"text-muted\" >\n                        Don't have an acount? <a  href=\"/signup/\"><span className=\"login-Btn SignUp-btn\">Click here to Sign up.</span></a>\n                        </Form.Text>\n                    </Form.Group>\n                    <Button to=\"/\" className=\"login-Btn\" type=\"submit\">Login</Button>\n                </Form>\n            </div>\n    )\n  }\n}\n\nexport default LogIn;","import React, {Component} from 'react';\nimport {Card, CardDeck, Button} from 'react-bootstrap';\nimport '../containers/App.css';\nimport axios from 'axios';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL= process.env.REACT_APP_BASE_URL\n\nclass GroupList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            groups: [],\n            id: '',\n            title: '',\n            description: '',\n            image: null,\n            preview: null,\n            is_public: true,\n        }\n\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(group) {\n        console.log(this.state.id)\n        axios.delete(`${BASE_URL}/api/v1/${group.id}`)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n            let groups = [...this.state.groups];\n            const INDEX = groups.indexOf(group);\n            groups.splice(INDEX, 1);\n            this.setState({groups: groups})\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    componentDidMount() {\n        axios.get(`${BASE_URL}/api/v1/`)\n        .then(result => {\n            console.log(result);\n            this.setState({groups: result.data})\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        console.log('group list', this.props)\n        console.log(this.state.groups)\n        return(\n            <div className=\"collect ml-5\">\n                <h2 className=\"mt-5\">Your Collections</h2>\n                    {this.state.groups.map(group => \n                    <CardDeck key={group.id} style={{ width: '35rem' }}>\n                        <Card bg=\"dark\" text=\"white\" className=\"mt-5 mr-5\" >\n                            <Card.Img src={group.image} variant=\"top\" alt=\"Uploaded content\" />\n                            <Card.Body>\n                                <Card.Title>{group.title}</Card.Title>\n                                <Card.Text>{group.description}</Card.Text>\n                                <Card.Link href={`/GroupDetail/${group.id}`} className=\"alert-link\">View Collection</Card.Link>\n                                <Card.Link onClick={() => this.handleDelete(group)} href=\"#\" type=\"submit\" className=\"text-danger\">Remove</Card.Link>\n                            </Card.Body>\n                        </Card>\n                    </CardDeck>)}\n                <Button href=\"/GroupForm\" variant=\"outline-primary\" className=\"mt-5 mb-5\">Create new Collection</Button>\n            </div>\n        )\n    }\n}\n\nexport default GroupList","import React, {Component} from 'react';\nimport {CardDeck, Card} from 'react-bootstrap'\nimport '../containers/App.css';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nclass GroupDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            group: null,\n            image: null,\n            title: null,\n            description: null,\n        }\n    }\n\n    componentDidMount() {\n       \n        const { id } = this.props.match.params\n        \n\n        axios.get(`${BASE_URL}/api/v1/${id}`)\n        .then((res) => {\n            console.log(res.data)\n            this.setState(() => ( res.data ))\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        // console.log(this.state);\n        return(\n            <div className=\"row justify-content-center\">\n            <CardDeck className=\"mt-5 col-11\">\n                <Card className=\"bg-dark text-white\">\n                    \n                    <Card.Img src={this.state.image} variant=\"top\" className=\"blur\" />\n                    \n                    <Card.Body >\n                    <Card.Title> <h1>{this.state.title} </h1></Card.Title>\n                    <Card.Text>\n                        <h3>{this.state.description}</h3>\n                    </Card.Text>\n                    <Card.Link href=\"#\" className=\"alert-link\">Edit Collection</Card.Link>\n                    <div className=\"w-100\"></div>\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n            </div>\n            \n        )\n    }\n\n}\n\nexport default GroupDetail","import React, {Component} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport '../containers/App.css';\nimport axios from \"axios\";\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nclass GroupForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            description: '',\n            image: null,\n            is_public: true,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleImage = this.handleImage.bind(this);\n    }\n\n      handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n      }\n    \n      handleImage(e) {\n        console.log(e.target.files);\n        let file = e.target.files[0];\n        this.setState({image: file});\n        // let reader = new FileReader();\n        // reader.onloadend = () => this.setState({image: reader.result});\n        // reader.readAsDataURL(file);\n      }\n    \n      handleSubmit(e) {\n        e.preventDefault();\n        let formData = new FormData();\n        // console.log(this.state)\n    \n        formData.append('title', this.state.title);\n        formData.append('description', this.state.description);\n        formData.append('image', this.state.image);\n        formData.append('is_public', false);\n\n        console.log(this.state);\n        // axios.post('api/v1/', formData);\n    \n        axios.post(`${BASE_URL}/api/v1/`, formData, {\n          headers: {\n            'content-type': 'multipart/form-data'\n          }\n        })\n        .then(res => {\n    \n          console.log(res);\n        })\n        .catch(error => {\n    \n          console.log(error);\n        })\n      }\n\n    render() {\n        return(\n            <div className=\"d-flex justify-content-center mt-5\">\n                <Form onSubmit={this.handleSubmit} className=\"justify-content-center\">\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name='title' value={this.state.title} onChange={this.handleChange} placeholder=\"Name of the Collection\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" name='description' value={this.state.description} onChange={this.handleChange} rows=\"3\" placeholder=\"Short description of the Collection\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Upload an Image</Form.Label>\n                        <Form.Control type=\"file\" name='image' onChange={this.handleImage}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"switch\" id=\"custom-switch\" label=\"Make This Collection Private\"/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default GroupForm","import React, {Component} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport SignUp from '../components/SignUp.js'\nimport LogIn from '../components/LogIn.js'\nimport GroupList from '../components/GroupList.js'\nimport GroupDetail from '../components/GroupDetail.js'\nimport GroupForm from '../components/GroupForm.js'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Nav defaultActiveKey=\"/home\">\n          <Nav.Item className='span'>\n            <Nav.Link href =\"/\">Home</Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link href =\"/GroupList\">Profile</Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link href =\"/SignUp\">Sign Up</Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link href =\"/Login\">Log In</Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link onClick={logOut}>Log Out</Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/GroupForm\" component={GroupForm}/>\n          <Route path=\"/GroupDetail/:id\" component={GroupDetail}/>\n          <Route path=\"/GroupList\" component={GroupList}/>\n          <Route path=\"/LogIn\" component={LogIn}/>\n          <Route path=\"/SignUp\" component={SignUp}/>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction logOut() {\n  axios.post(`${BASE_URL}/rest-auth/logout/`)\n    .then(res => {\n        localStorage.removeItem('my-app-user');\n        console.log('one', res)\n    })\n    .catch(error => {\n        console.log(error);\n    });\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}